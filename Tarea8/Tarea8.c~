#include <stdio.h>
#include <stdlib.h>
#include <math.h>


float funcion_u_inicial(float x);

int main(void){

  int n_points;
  int i;
  int j;
  int times;
  float alfa;
  float *x;
  float *u_inicial;
  float *now;
  float *new;
  float h;

  n_points = 1000;
  times = 1200;
  h = 1.0/1000.0;
  delta_t = 0.0025;
  alfa = h/(delta_t*delta_t);

  x = malloc(n_points * sizeof(float));
  u_inicial = malloc(n_points * sizeof(float));
  now = malloc(n_points * sizeof(float));
  new = malloc(n_points * sizeof(float));


  if(!x){
    printf("There is something wrong with x\n");
    exit(1);
}


 if(!u_inicial){
    printf("There is something wrong with u_inicial\n");
    exit(1);
}


 if(!now){
    printf("There is something wrong with now\n");
    exit(1);
}

 if(!new){
    printf("There is something wrong with new\n");
    exit(1);
}


  x[0] = 0;

  for(i=0; i<n_points; i++){
    x[i] = x[i+1] + h;
 }


  u_inicial[0]= 0.0;
  u_inicial[n_points]= 0.0;


  for(i=0; i<n_points; i++){
    u_inicial[i]= funcion_u_inicial(x[i]);
 }


  for (j=0; j<times; j++){


 }






  return 0;

}


float funcion_u_inicial(float x){

  return 4*x*(1-x);

}
