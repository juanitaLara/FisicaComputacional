import math
import sys
import string
import cmath
import numpy as np
import matplotlib.pyplot as plt

obs_data = np.loadtxt("movimiento.dat")
x_obs = obs_data[:,0]
y_obs = obs_data[:,1]


def likelihood(y_obs, y_model):
    chi_squared = sum((y_obs-y_model)**2)
    return -chi_squared

def my_model(x_obs, a, b, c):
    return a*x_obs**2 + b*x_obs + c 


#List to keep the steps

a_walk = np.empty((0))
b_walk = np.empty((0))
c_walk = np.empty((0))

a_walk = np.append(a_walk, np.random.random())
b_walk = np.append(b_walk, np.random.random())
c_walk = np.append(c_walk, np.random.random())


n_iterations = 20000

for i in range(n_iterations):
    a_prime = np.random.normal(a_walk[i], 1.0)
    b_prime = np.random.normal(b_walk[i], 1.0)
    c_prime = np.random.normal(c_walk[i], 1.0)

    y_init = my_model(x_obs, a_walk[i], b_walk[i], c_walk[i])
    y_prime = my_model(x_obs, a_prime, b_prime, c_prime)

    alpha = likelihood(y_obs, y_prime)/likelihood(y_obs, y_init)

    if(alpha<=1.0):
        a_walk = np.append(a_walk, a_prime)
        b_walk = np.append(b_walk, b_prime)
        c_walk = np.append(c_walk, c_prime)
    else:

        beta = np.random.random()
        if(beta>=alpha):
            a_walk = np.append(a_walk, a_prime)
            b_walk = np.append(b_walk, b_prime)
            c_walk = np.append(c_walk, c_prime)
        else:
            a_walk = np.append(a_walk, a_walk[i])
            b_walk = np.append(b_walk, b_walk[i])
            c_walk = np.append(c_walk, c_walk[i])


average_a = np.average(a_walk)
average_b = np.average(b_walk)
average_c = np.average(c_walk)

best_y = my_model(x_obs, average_a, average_b, average_c)
plt.scatter(x_obs, y_obs)
plt.plot(x_obs, best_y)

plt.show()

